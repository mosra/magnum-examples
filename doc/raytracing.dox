/*
    This file is part of Magnum.

    Copyright © 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019,
                2020, 2021, 2022, 2023 Vladimír Vondruš <mosra@centrum.cz>
    Copyright © 2020 Nghia Truong <nghiatruong.vn@gmail.com>

    Permission is hereby granted, free of charge, to any person obtaining a
    copy of this software and associated documentation files (the "Software"),
    to deal in the Software without restriction, including without limitation
    the rights to use, copy, modify, merge, publish, distribute, sublicense,
    and/or sell copies of the Software, and to permit persons to whom the
    Software is furnished to do so, subject to the following conditions:

    The above copyright notice and this permission notice shall be included
    in all copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
    THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
    FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
    DEALINGS IN THE SOFTWARE.
*/

namespace Magnum {
/** @page examples-raytracing Ray Tracing
@brief Simple iterative CPU ray tracing
@m_since_{examples,2020,06}

@m_footernavigation

@image html raytracing.png width=400px

Implementation of a simple CPU ray tracer adapted from Peter Shirley's
book [Ray Tracing in One Weekend](https://raytracing.github.io/books/RayTracingInOneWeekend.html).
The current implementation runs on single thread and performs iterative
rendering to refine the result. Typically, a high quality image can be achieved
after around 100 iterations.

@m_div{m-button m-primary} <a href="https://magnum.graphics/showcase/raytracing/">@m_div{m-big} Live web demo @m_enddiv @m_div{m-small} uses WebAssembly & WebGL @m_enddiv </a> @m_enddiv

@section examples-raytracing-controls Controls

-   @m_class{m-label m-default} **mouse drag** rotates the camera
-   @m_class{m-label m-warning} **Shift** @m_class{m-label m-default} **mouse
    drag** pans the camera
-   @m_class{m-label m-default} **mouse wheel** zooms in/out
-   @m_class{m-label m-default} **R** resets the camera to its original
    transformation
-   @m_class{m-label m-default} **D** toggles Depth-of-Field
-   @m_class{m-label m-default} **M** toggles marking the next rendered block
    by a different color
-   @m_class{m-label m-default} **N** generate a new random scene
-   @m_class{m-label m-default} **Space** pauses/resumes rendering

Additionally, various options can be set via command line:

-   `--block-size PIXELS` --- size of a block to render at a time (default: 64)
-   `--max-samples COUNT` --- max samples per pixel (default: 100)
-   `--max-ray-depth DEPTH` ---  max ray depth (default: 16)

@section examples-raytracing-credits Credits

This example was originally contributed by [Nghia Truong](https://github.com/ttnghia).

@section examples-raytracing-source Source

Full source code is linked below and also available in the
[magnum-examples GitHub repository](https://github.com/mosra/magnum-examples/tree/master/src/raytracing).

-   @ref raytracing/Camera.h "Camera.h"
-   @ref raytracing/CMakeLists.txt "CMakeLists.txt"
-   @ref raytracing/Materials.h "Materials.h"
-   @ref raytracing/Materials.cpp "Materials.cpp"
-   @ref raytracing/Objects.h "Objects.h"
-   @ref raytracing/Objects.cpp "Objects.cpp"
-   @ref raytracing/RayTracer.h "RayTracer.h"
-   @ref raytracing/RayTracer.cpp "RayTracer.cpp"
-   @ref raytracing/RayTracingExample.cpp "RayTracingExample.cpp"
-   @ref raytracing/RndGenerators.h "RndGenerators.h"

The [ports branch](https://github.com/mosra/magnum-examples/tree/ports/src/raytracing)
contains additional patches for @ref CORRADE_TARGET_EMSCRIPTEN "Emscripten"
support that aren't present in `master` in order to keep the example code as
simple as possible.

@example raytracing/Camera.h @m_examplenavigation{examples-raytracing,raytracing/} @m_footernavigation
@example raytracing/CMakeLists.txt @m_examplenavigation{examples-raytracing,raytracing/} @m_footernavigation
@example raytracing/Materials.h @m_examplenavigation{examples-raytracing,raytracing/} @m_footernavigation
@example raytracing/Materials.cpp @m_examplenavigation{examples-raytracing,raytracing/} @m_footernavigation
@example raytracing/Objects.h @m_examplenavigation{examples-raytracing,raytracing/} @m_footernavigation
@example raytracing/Objects.cpp @m_examplenavigation{examples-raytracing,raytracing/} @m_footernavigation
@example raytracing/RayTracer.h @m_examplenavigation{examples-raytracing,raytracing/} @m_footernavigation
@example raytracing/RayTracer.cpp @m_examplenavigation{examples-raytracing,raytracing/} @m_footernavigation
@example raytracing/RayTracingExample.cpp @m_examplenavigation{examples-raytracing,raytracing/} @m_footernavigation
@example raytracing/RndGenerators.h @m_examplenavigation{examples-raytracing,raytracing/} @m_footernavigation

*/
}
