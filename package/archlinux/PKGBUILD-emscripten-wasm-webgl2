# Author: mosra <mosra@centrum.cz>
pkgname=emscripten-magnum-examples
pkgver=dev.wasm.webgl2
pkgrel=1
pkgdesc="Examples for Magnum OpenGL graphics engine (Emscripten WebGL 2, wasm)"
arch=('any')
url="https://magnum.graphics"
license=('MIT')
depends=('emscripten-magnum=dev.wasm.webgl2' 'emscripten-magnum-plugins=dev.wasm.webgl2' 'emscripten-bullet' 'emscripten-magnum-integration=dev.wasm.webgl2' 'emscripten-box2d' 'imgui-src')
makedepends=('cmake' 'emscripten' 'corrade' 'ninja')
options=('!strip' '!buildflags')

_rootdir=$startdir/../../

prepare() {
    # This is needed in order to fill ~/.emscripten_cache/sysroot/ with
    # up-to-date dependency headers and libs. There's
    #   embuilder build sysroot --force
    # as suggested in https://github.com/emscripten-core/emscripten/pull/13090
    # that does the same in a builtin way, but it DELIBERATELY does not
    # preserve timestamps in any way, forcing a full rebuild every time. Why?!
    #   https://github.com/emscripten-core/emscripten/blob/0566a76b500bd2bbd535e108f657fce1db7f6f75/tools/shared.py#L687
    # Could use cp -rp instead of rsync if the system include dir didn't have
    # that stupid designed-to-fail version.h :(
    rsync -rlt /usr/lib/emscripten/system/include/ --exclude=emscripten/version.h $(em-config CACHE)/sysroot/include/
}

build() {
    if [ ! -d "$_rootdir/build-emscripten-wasm-webgl2" ] ; then
        mkdir "$_rootdir/build-emscripten-wasm-webgl2"
        cd "$_rootdir/build-emscripten-wasm-webgl2"

        cmake .. \
            -DCMAKE_TOOLCHAIN_FILE="$_rootdir/toolchains/generic/Emscripten-wasm.cmake" \
            -G Ninja
    fi

    cd "$_rootdir/build-emscripten-wasm-webgl2"

    # Colored output is enabled implicitly. If Ninja detects it's outputting to
    # a pipe, it strips it away from the output; Clang unfortunately doesn't
    # have any env var to temporarily disable colors. The inverse, i.e.
    # preserving colors when Ninja outputs to a pipe can be done with
    # CLICOLOR_FORCE=1: https://github.com/ninja-build/ninja/issues/2196
    cmake .. \
        -DCMAKE_BUILD_TYPE=Release \
        -DCMAKE_COLOR_DIAGNOSTICS=ON \
        -DIMGUI_DIR=/opt/imgui \
        -DMAGNUM_DEPLOY_PREFIX=/srv/http/emscripten-webgl2 \
        -DMAGNUM_WITH_ANIMATED_GIF_EXAMPLE=OFF \
        -DMAGNUM_WITH_ARCBALL_EXAMPLE=ON \
        -DMAGNUM_WITH_AREALIGHTS_EXAMPLE=ON \
        -DMAGNUM_WITH_AUDIO_EXAMPLE=ON \
        -DMAGNUM_WITH_BOX2D_EXAMPLE=ON \
        -DMAGNUM_WITH_BULLET_EXAMPLE=ON \
        -DMAGNUM_WITH_CUBEMAP_EXAMPLE=OFF \
        -DMAGNUM_WITH_DART_EXAMPLE=OFF \
        -DMAGNUM_WITH_FLUIDSIMULATION2D_EXAMPLE=ON \
        -DMAGNUM_WITH_FLUIDSIMULATION3D_EXAMPLE=ON \
        -DMAGNUM_WITH_IMGUI_EXAMPLE=ON \
        -DMAGNUM_WITH_MOTIONBLUR_EXAMPLE=OFF \
        -DMAGNUM_WITH_MOUSEINTERACTION_EXAMPLE=ON \
        -DMAGNUM_WITH_OCTREE_EXAMPLE=ON \
        -DMAGNUM_WITH_PICKING_EXAMPLE=ON \
        -DMAGNUM_WITH_PRIMITIVES_EXAMPLE=ON \
        -DMAGNUM_WITH_RAYTRACING_EXAMPLE=ON \
        -DMAGNUM_WITH_SHADOWS_EXAMPLE=OFF \
        -DMAGNUM_WITH_TEXT_EXAMPLE=ON \
        -DMAGNUM_WITH_TEXTUREDQUAD_EXAMPLE=ON \
        -DMAGNUM_WITH_TRIANGLE_EXAMPLE=ON \
        -DMAGNUM_WITH_TRIANGLE_PLAIN_GLFW_EXAMPLE=OFF \
        -DMAGNUM_WITH_TRIANGLE_SOKOL_EXAMPLE=OFF \
        -DMAGNUM_WITH_VIEWER_EXAMPLE=ON \
        -DMAGNUM_WITH_WEBXR_EXAMPLE=ON
    ninja
}

package() {
  cd "$_rootdir/build-emscripten-wasm-webgl2"
  DESTDIR="$pkgdir/" ninja install
}
